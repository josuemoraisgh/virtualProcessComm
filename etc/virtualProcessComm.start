function retorno = startModule()
    global %VirtualProcessCommPath
    
    mprintf("Start " + TOOLBOX_TITLE + "\n");
    
    if isdef(TOOLBOX_NAME+"lib") then
        warning(TOOLBOX_NAME+"lib is already loaded");
        return;
    end

    etc_path  = getshortpathname(get_absolute_file_path(TOOLBOX_NAME+".start"));
    root_path = fullpath(etc_path+"/../")+filesep();
    %VirtualProcessCommPath = root_path;
    
    //Load  functions library
    mprintf("\tLoad macros\n");
    macros_path = pathconvert(root_path)+"macros"+filesep();
    retorno = lib(macros_path);
    
    // load gateways and Java libraries
    //verboseMode = ilib_verbose();
    //ilib_verbose(0);
    //mprintf("\tLoad gateways\n");
    //exec(pathconvert(root_path+"/sci_gateway/loader_gateway.sce",%f));
    //mprintf("\tLoad Java libraries\n");
    //exec(pathconvert(root_path+"/src/java/loader.sce",%f));
    //ilib_verbose(verboseMode);
    
    // load localization
    addlocalizationdomain(TOOLBOX_NAME, root_path + "/locales");
    
    // Load and add help chapter
    if or(getscilabmode() == ["NW";"STD"]) then
        mprintf("\tLoad help\n");
        addchapter_path = pathconvert(root_path+"/jar");
        if isdir(addchapter_path) then
            add_help_chapter(TOOLBOX_NAME, addchapter_path, %F);
        end
    end
    
    // Load demos
    if or(getscilabmode() == ["NW";"STD"]) then
        mprintf("\tLoad demos\n");
        demos_path = pathconvert(root_path+"/demos/dem.gateway.sce", %F, %T);
        add_demo(TOOLBOX_TITLE, demos_path);
    end
    
    // Load Preferences GUI
    //if getscilabmode() == "STD" then
    //    addModulePreferences(TOOLBOX_TITLE,root_path,etc_path + "preferences.xml");
    //end
endfunction
global %VirtualProcessCommPath
TOOLBOX_NAME  = "virtualProcessComm";
TOOLBOX_TITLE = "virtual Process Communication";
virtualHartScilib = startModule();
clear startModule;

